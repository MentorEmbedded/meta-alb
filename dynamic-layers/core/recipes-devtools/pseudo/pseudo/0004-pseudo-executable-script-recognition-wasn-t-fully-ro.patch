From 86eb0c11236a04f669b9aad8919f841ebba9015f Mon Sep 17 00:00:00 2001
From: Heinz Wrobel <Heinz.Wrobel@nxp.com>
Date: Tue, 19 Jan 2021 18:03:31 +0100
Subject: [PATCH 4/4] pseudo: executable script recognition wasn't fully robust

Turns out that a pathological file could have confused the script
recognition. Now the check is still a bit silly but at least robust.

Signed-off-by: Heinz Wrobel <Heinz.Wrobel@nxp.com>
---
 pseudo_client.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/pseudo_client.c b/pseudo_client.c
index 6b5a127..e052058 100644
--- a/pseudo_client.c
+++ b/pseudo_client.c
@@ -2320,9 +2320,11 @@ static int exec_chroot_scriptcheck(const char **filenamep, char * const**argvp,
 	int splitargs = 0;
 	int extraargc = 0;
 	int changeargv0 = 0;
+	ssize_t contentsize = 0;
 	char *s;
 
-	foundscript = isexecutable(chrootfile, &scriptcheck[0], sizeof(scriptcheck));
+	contentsize = isexecutable(chrootfile, &scriptcheck[0], sizeof(scriptcheck));
+	foundscript = (contentsize > 3);
 	if (foundscript) {
 		pseudo_debug(PDBGF_CLIENT, "exec path chroot checking for script in %s (argv[0]='%s')\n", chrootfile, (*argvp)[0]);
 		foundscript = 0;
@@ -2333,7 +2335,7 @@ static int exec_chroot_scriptcheck(const char **filenamep, char * const**argvp,
 			 * the kernel does it in binfmt_script.c
 			 */
 			scriptcheck[sizeof(scriptcheck) - 1] = '\0';
-			s = strchr(scriptcheck, '\n');
+			s = strchr(&scriptcheck[2], '\n');
 			if (s)
 				*s = 0;
 			s = &scriptcheck[2];
-- 
2.17.1

