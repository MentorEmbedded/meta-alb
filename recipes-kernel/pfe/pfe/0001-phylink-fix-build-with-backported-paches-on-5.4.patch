From 3f4e3992848996a0607e67dd69ed1ebc7f0d0a43 Mon Sep 17 00:00:00 2001
From: "Radu Pirea (NXP OSS)" <radu-nicolae.pirea@oss.nxp.com>
Date: Tue, 29 Jun 2021 16:08:44 +0300
Subject: [PATCH] phylink: fix build with backported paches on 5.4

Fix build of pfe driver using 5.4 kernel with backported patches.

Issue: ALB-7313

Signed-off-by: Radu Pirea (NXP OSS) <radu-nicolae.pirea@oss.nxp.com>
---
 sw/linux-pfeng/pfeng-ethtool.c |  5 +----
 sw/linux-pfeng/pfeng-phylink.c | 22 ----------------------
 2 files changed, 1 insertion(+), 26 deletions(-)

diff --git a/sw/linux-pfeng/pfeng-ethtool.c b/sw/linux-pfeng/pfeng-ethtool.c
index abd4ecd..5a938ee 100644
--- a/sw/linux-pfeng/pfeng-ethtool.c
+++ b/sw/linux-pfeng/pfeng-ethtool.c
@@ -170,10 +170,7 @@ static int pfeng_set_coalesce(struct net_device *netdev, struct ethtool_coalesce
 }
 
 static const struct ethtool_ops pfeng_ethtool_ops = {
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,5,0)
-	.supported_coalesce_params = ETHTOOL_COALESCE_RX_USECS |
-				     ETHTOOL_COALESCE_RX_MAX_FRAMES,
-#endif
+	.supported_coalesce_params = ETHTOOL_COALESCE_RX_USECS,
 	.get_drvinfo = pfeng_ethtool_getdrvinfo,
 	.get_link = ethtool_op_get_link,
 	.nway_reset = pfeng_ethtool_nway_reset,
diff --git a/sw/linux-pfeng/pfeng-phylink.c b/sw/linux-pfeng/pfeng-phylink.c
index a6fd7af..9e06409 100644
--- a/sw/linux-pfeng/pfeng-phylink.c
+++ b/sw/linux-pfeng/pfeng-phylink.c
@@ -215,17 +215,10 @@ static int _pfeng_mac_link_state(struct phylink_config *config, struct phylink_l
 #endif /* PFENG_CFG_LINUX_NO_SERDES_SUPPORT */
 }
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,5,0)
 static void pfeng_mac_link_state(struct phylink_config *config, struct phylink_link_state *state)
 {
 	_pfeng_mac_link_state(config, state);
 }
-#else /* kernel 5.4 */
-static int pfeng_mac_link_state(struct phylink_config *config, struct phylink_link_state *state)
-{
-	return _pfeng_mac_link_state(config, state);
-}
-#endif
 
 static void pfeng_mac_an_restart(struct phylink_config *config)
 {
@@ -323,7 +316,6 @@ static void pfeng_mac_link_down(struct phylink_config *config, unsigned int mode
 	netif_tx_stop_all_queues(netif->netdev);
 }
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,5,0)
 static void pfeng_mac_link_up(struct phylink_config *config,  struct phy_device *phy,
 			      unsigned int mode, phy_interface_t interface, int speed,
 			      int duplex, bool tx_pause, bool rx_pause)
@@ -333,24 +325,10 @@ static void pfeng_mac_link_up(struct phylink_config *config,  struct phy_device
 	/* Enable Rx and Tx */
 	netif_tx_wake_all_queues(netif->netdev);
 }
-#else	/* kernel 5.4 */
-static void pfeng_mac_link_up(struct phylink_config *config, unsigned int mode,
-			      phy_interface_t interface, struct phy_device *phy)
-{
-	struct pfeng_netif *netif = netdev_priv(to_net_dev(config->dev));
-
-	/* Enable Rx and Tx */
-	netif_tx_wake_all_queues(netif->netdev);
-}
-#endif
 
 static const struct phylink_mac_ops pfeng_phylink_ops = {
 	.validate = pfeng_phylink_validate,
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,5,0)
 	.mac_pcs_get_state = pfeng_mac_link_state,
-#else
-	.mac_link_state = pfeng_mac_link_state,
-#endif
 	.mac_an_restart = pfeng_mac_an_restart,
 	.mac_config = pfeng_mac_config,
 	.mac_link_down = pfeng_mac_link_down,
-- 
2.32.0

